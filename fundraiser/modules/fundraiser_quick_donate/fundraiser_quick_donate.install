<?php

/**
 * @file
 * Install file for fundraiser_quick_donate.
 */

/**
 * Implements hook_schema().
 */
function fundraiser_quick_donate_schema() {
  $schema = array();

  $schema['fundraiser_quick_donate'] = array(
    'description' => 'Stores data about quick donations for fundraisers.',
    'fields' => array(
      'fundraiser_nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The {node}.nid of the fundraiser.',
        'default' => 0,
      ),
      'quickdonate_optin_message_new_user' => array(
        'description' => 'The opt-in message to display to end users (who have not opted into Quick Donate) if the fundraiser has quick payments enabled.',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'quickdonate_help_message_new_user' => array(
        'description' => 'The help message to display to end users (who have not opted into Quick Donate) if the fundraiser has quick payments enabled.',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'quickdonate_help_message_new_user_format' => array(
        'description' => 'The format of the help message for users not opted into Quick Donate.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
        'default' => 'plain_text',
      ),
      'quickdonate_optin_message_existing_user' => array(
        'description' => 'The opt-in message to display to end users (who have already opted into Quick Donate) if the fundraiser has quick payments enabled.',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'quickdonate_help_message_existing_user' => array(
        'description' => 'The help message to display to end users (who have already opted into Quick Donate) if the fundraiser has quick payments enabled.',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'quickdonate_help_message_existing_user_format' => array(
        'description' => 'The format of the help message for existing quick donate users.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
        'default' => 'plain_text',
      ),
      'quickdonate_login_message' => array(
        'description' => 'The login message to display to end users if the fundraiser has quick payments enabled.',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'quickdonate_login_link_message' => array(
        'description' => 'The login link message to display to end users if the fundraiser has quick payments enabled.',
        'type' => 'text',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('fundraiser_nid'),
    'foreign keys' => array(
      'fundraiser_nid' => array(
        'table' => 'node',
        'columns' => array('fundraiser_nid' => 'nid'),
      ),
    ),
  );

  $schema['fundraiser_quick_donate_cardonfile'] = array(
    'description' => 'Stores data about user\'s payment information to be used for quick donations.',
    'fields' => array(
      'qd_id' => array(
        'description' => 'ID for this quick donation record.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'status' => array(
        'description' => "If this quick donationo method is enabled or not.",
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 1,
      ),
      'card_id' => array(
        'description' => 'Numeric ID of the truncated card data in the local database.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'The {users}.uid that supplied this card data.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'optin_date' => array(
        'description' => 'The Unix timestamp when the card data was set to be used for quick donations.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'did' => array(
        'description' => 'The donation ID.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ),
      'ms' => array(
        'description' => 'The market source.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'cid' => array(
        'description' => 'The campaign id.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'nid' => array(
        'description' => 'The node ID the user opted in to quick donations.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'gateway' => array(
        'description' => 'The gateway instance used when opting in to quick donations.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('qd_id', 'uid'),
    'indexes' => array(
      'card_id' => array('card_id'),
      'donation_id' => array('did'),
    ),
    'foreign keys' => array(
      'cardid' => array(
        'table' => 'commerce_cardonfile',
        'columns' => array('card_id' => 'card_id'),
      ),
      'creator' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
      'donationid' => array(
        'table' => 'fundraiser_donation',
        'columns' => array('did' => 'did'),
      ),
    ),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function fundraiser_quick_donate_install() {
  if (empty(field_info_field('field_quick_donate_opt_in'))) {
    $field = array(
      'translatable' => '0',
      'settings' => array(
        'granularity' => array(
          'month' => 'month',
          'day' => 'day',
          'hour' => 'hour',
          'minute' => 'minute',
          'second' => 'second',
          'year' => 'year',
        ),
        'tz_handling' => 'site',
        'timezone_db' => 'UTC',
        'cache_enabled' => 0,
        'cache_count' => '4',
        'todate' => '',
      ),
      'field_name' => 'field_quick_donate_opt_in',
      'type' => 'datetime',
      'active' => '1',
      'locked' => '0',
      'cardinality' => '1',
    );
    field_create_field($field);

    $instance = array(
      'label' => 'Quick Donate Opt In',
      'widget' => array(
        'weight' => '28',
        'type' => 'date_text',
        'active' => 1,
        'settings' => array(
          'input_format' => 'm/d/Y - H:i:s',
          'input_format_custom' => '',
          'year_range' => '-3:+3',
          'increment' => 15,
          'label_position' => 'above',
          'text_parts' => array(),
        ),
      ),
      'settings' => array(
        'default_value' => 'now',
        'default_value_code' => '',
        'default_value2' => 'same',
        'default_value_code2' => '',
        'user_register_form' => 0,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'type' => 'hidden',
          'weight' => '9',
          'settings' => array(),
        ),
      ),
      'required' => 0,
      'description' => '',
      'field_name' => 'field_quick_donate_opt_in',
      'entity_type' => 'user',
      'bundle' => 'user',
    );
    field_create_instance($instance);
  }
}

/**
 * Implements hook_uninstall().
 */
function fundraiser_quick_donate_uninstall() {
  $field_name = 'field_quick_donate_opt_in';
  if ($instance = field_info_instance('user', $field_name, 'user')) {
    field_delete_instance($instance);
  }

  field_delete_field($field_name);
  field_purge_batch(100);
}

/**
 * Implements hook_update_N().
 *
 * Change the 'quickdonate_option_message' to 'quickdonate_option_message_new_
 * user', 'quickdonate_help_message' to 'quickdonate_help_message_new_user', and
 * 'quickdonate_help_message_form' to 'quickdonate_help_message_new_user_
 * format'. Also add three new fields, 'quickdonate_optin_message_existing_
 * _user', 'quickdonate_help_message_existing_user', and 'quickdonate_help_
 * message_existing_user_format'.
 */
function fundraiser_quick_donate_update_7001() {
  // If one of the old field definition exists, we assume they all exist and all
  // must be changed.
  if (db_field_exists('fundraiser_quick_donate', 'quickdonate_optin_message')) {
    db_change_field('fundraiser_quick_donate', 'quickdonate_optin_message', 'quickdonate_optin_message_new_user', array(
      'description' => 'The opt-in message to display to end users (who have not opted into Quick Donate) if the fundraiser has quick payments enabled.',
      'type' => 'text',
      'not null' => FALSE,
    ));
    db_change_field('fundraiser_quick_donate', 'quickdonate_help_message', 'quickdonate_help_message_new_user', array(
      'description' => 'The help message to display to end users (who have not opted into Quick Donate) if the fundraiser has quick payments enabled.',
      'type' => 'text',
      'not null' => FALSE,
    ));
    db_change_field('fundraiser_quick_donate', 'quickdonate_help_message_format', 'quickdonate_help_message_new_user_format', array(
      'description' => 'The format of the help message for users not opted into Quick Donate.',
      'type' => 'varchar',
      'length' => '255',
      'not null' => FALSE,
      'default' => 'plain_text',
    ));
    db_add_field('fundraiser_quick_donate', 'quickdonate_optin_message_existing_user', array(
      'description' => 'The opt-in message to display to end users (who have already opted into Quick Donate) if the fundraiser has quick payments enabled.',
      'type' => 'text',
      'not null' => FALSE,
    ));
    db_add_field('fundraiser_quick_donate', 'quickdonate_help_message_existing_user', array(
      'description' => 'The help message to display to end users (who have already opted into Quick Donate) if the fundraiser has quick payments enabled.',
      'type' => 'text',
      'not null' => FALSE,
    ));
    db_add_field('fundraiser_quick_donate', 'quickdonate_help_message_existing_user_format', array(
      'description' => 'The format of the help message for existing quick donate users.',
      'type' => 'varchar',
      'length' => '255',
      'not null' => FALSE,
      'default' => 'plain_text',
    ));
  }
}
