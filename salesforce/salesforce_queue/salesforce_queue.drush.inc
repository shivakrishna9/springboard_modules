<?php

/**
 * @file
 * Drush commands for the Salesforce queue module.
 */


/**
 * Implements hook_drush_help().
 */
function salesforce_queue_drush_help($command) {
  switch ($command) {
    case 'drush:salesforce-queue-process':
      return dt('Processes the Salesforce queue.');
  }
}

/**
 * Implements hook_drush_command().
 */
function salesforce_queue_drush_command() {
  $items = array();
  $items['salesforce-queue-process'] = array(
    'description' => dt('Processes the Salesforce queue.'),
    'arguments' => array(
      'queue' => dt('Name of the queue to process'),
    ),
    'examples' => array(
      'Standard example' => 'drush salesforce-queue-process',
      'Argument example' => 'drush salesforce-queue-process all',
    ),
    'aliases' => array('sfqp'),
  );
  $items['salesforce-queue-increment-ids'] = array(
    'description' => dt('Set auto-incrementing Drupal IDs.'),
    'arguments' => array(
      'id' => dt('ID value to set across tables'),
    ),
    'examples' => array(
      'Standard example' => 'drush salesforce-increment-ids 10000',
    ),
    'aliases' => array('sfqincid'),
  );
  return $items;
}

/**
 * Callback function for drush salesforce-queue-process.
 *
 * Processes the specified Salesforce queue.
 *
 * @param string $queue
 *   An optional queue to process.
 */
function drush_salesforce_queue_process($queue = 'salesforce_queue') {
  if (isset($queue)) {
    drush_print('Processing ' . $queue);
  }

  $queue = salesforce_queue_load();
  $processor = salesforce_queue_load_processor($queue);
  $processor->process();

  drush_print(print_r($processor->getNewSfRecords(), TRUE));

  // Log to the command line with an OK status.
  drush_log('Running salesforce-queue-process', 'ok');
}

/**
 * Callback function for drush salesforce-increment-ids.
 *
 * Set AUTO_INCREMENT for IDs on commerce_order, webform_submissions, sequences
 * (used to set uid value for the users table), commerce_cardonfile, and
 * sb_social_shares. These sometimes need to be increased to some greater
 * arbitrary value when multiple development sites access the same SF instance
 * and the Drupal IDs collide.
 *
 * @param int $id
 *   The ID to set the auto-incrementing fields to.
 */
function drush_salesforce_queue_increment_ids($id = 10000) {
  $tables = array(
    'commerce_order',
    'webform_submissions',
    'sequences',
    'commerce_cardonfile',
    'sb_social_shares',
  );
  foreach ($tables as $table) {
    $sql = "ALTER TABLE {$table} AUTO_INCREMENT = $id";
    db_query($sql);
    drush_log("Updated table $table", 'ok');
  }
}
